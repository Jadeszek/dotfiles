#!/bin/zsh

# Mirrors directories specified in syncdir from SENDER to RECEIVER

# Options
SENDER="/media/MyBook"
RECEIVER="/media/storage"
UMOUNT=0
ANSWER=

# rsync command-line-options
rsynccli=("-r" # recursive
	  "-h" # print human-readable values
	  "-u" # skip files, that are newer on the receiver
	  "--ignore-existing" # skip files existing on receiver
	  "--progress" # print a progress bar
	  "--delete" # delete files only on receiver
)
# directories
syncdir=("Filme")

# --------- #
# FUNCTIONS #
# --------- #

die() {
    print "!! $*"
    exit 1
}

finalize() {
    [[ -n $* ]] && print "!! $*"
    [[ $UMOUNT == 1 ]] && umount_receiver
    exit 1
}

ask() {
    print -n $*
    read -q ANSWER
    print # newline
}

diff_sub() {
    DIR1_TMP=$(mktemp)
    DIR2_TMP=$(mktemp)

    cd $SENDER
    find $1 | sort > $DIR1_TMP
    cd -
    cd $RECEIVER
    find $1 | sort > $DIR2_TMP
    cd -

    colordiff $DIR2_TMP $DIR1_TMP

    rm -f $DIR1_TMP $DIR2_TMP
}

mount_receiver() {
    print "** mounting $RECEIVER"
    mount $RECEIVER || die "error mounting $RECEIVER"
    UMOUNT=1
}

umount_receiver() {
    print "** umounting $RECEIVER"
    umount $RECEIVER || die "error umounting $RECEIVER"
}

main() {
    # check if we're mounted
    mountpoint $RECEIVER >/dev/null
    [[ $? != 0 ]] && mount_receiver

    # print a diff
    for i in $syncdir[@]; do
	diff_sub $i
    done

    # ask if synchronization is ok
    ask "Continue synchronization (y/n)? "
    [[ $ANSWER != "y" ]] && finalize "aborted by user"

    # the actual synchronization
    for i in $syncdir[@]; do
	print "** synchronizing $i"
	rsync $rsynccli[@] \
	    $SENDER/$i/ \
	    $RECEIVER/$i/ \
	    || die "error syncing"
	print # newline
    done

    # umount
    [[ $UMOUNT == 1 ]] && umount_receiver
}

main
