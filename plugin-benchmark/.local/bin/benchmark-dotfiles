#!/usr/bin/env ruby
# encoding: utf-8
require 'benchmark'

def which?(cmd)
  system("which #{cmd} > /dev/null 2>&1")
end

def run_benchmark(name, command, repetitions = REP)
  total = 0

  print(name.ljust(6))
  dot = (repetitions / 10).to_i

  repetitions.times do |n|
    print('.') if (n % dot == 0)
    time = Benchmark.realtime { `#{command}` }
    total += time
  end

  avg = total / repetitions
  printf("\r%s %0.08fs    \n", name.ljust(6), avg)
end

def find_shells
  shells = []
  %w(zsh bash mksh pdksh ksh sh fish).each do |shell|
    shells << shell if which?(shell)
  end
  shells
end

time = Benchmark.realtime do
  if ARGV[0].nil?
    REP = 200
  else
    REP = ARGV[0].to_i
    exit! if REP < 10
  end

  puts "Average of #{REP} runs."

  shells = find_shells

  shells.each do |shell|
    run_benchmark(shell, "#{shell} -ic 'echo -n'")
  end unless shells.empty?

  run_benchmark('vim',     'vim +q 2>&1 >$(tty)', (REP / 5).to_i) if which?("vim")
  run_benchmark('neovim', 'nvim +q 2>&1 >$(tty)', (REP / 5).to_i) if which?("nvim")
end

printf("Benchmark took %0.02fs to run\n", time)
