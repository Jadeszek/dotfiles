#!/usr/bin/env sh

usage="usage: $(basename $0) {up|down|mute|mic} [-i increment] [-m mixer]"
command=
increment=5%
mixer=Master

while getopts i:m:h o
do case "$o" in
    i) increment=$OPTARG;;
    m) mixer=$OPTARG;;
    h) echo "$usage"; exit 0;;
    ?) echo "$usage"; exit 0;;
esac
done

shift $(($OPTIND - 1))
command=$1

# usage

if [ "$command" = "" ]; then
    echo $usage
    exit 1;
fi

# volume controls

if [ "$command" = "up" ]; then
    display_volume=$(amixer set $mixer $increment+ unmute | grep -m 1 "%]" | cut -d "[" -f2|cut -d "%" -f1)
fi

if [ "$command" = "down" ]; then
    display_volume=$(amixer set $mixer $increment- unmute | grep -m 1 "%]" | cut -d "[" -f2|cut -d "%" -f1)
fi

if [ "$command" = "mute" ]; then
    if amixer get Master | grep "\[on\]"; then
        display_volume=0
        amixer set $mixer mute
    else
        display_volume=$(amixer set $mixer unmute | grep -m 1 "%]" | cut -d "[" -f2|cut -d "%" -f1)
    fi
fi

if [ "$display_volume" = "0" ]; then
    icon_name="audio-volume-muted-symbolic"
elif [ "$display_volume" -lt "33" ]; then
    icon_name="audio-volume-low-symbolic"
elif [ "$display_volume" -lt "66" ]; then
    icon_name="audio-volume-medium-symbolic"
else
    icon_name="audio-volume-high-symbolic"
fi

# microphone controls

if [ "$command" = "mic" ]; then
    amixer set Capture toggle

    if amixer get Capture | grep "\[on\]"; then
        display_volume=100
        icon_name="microphone-sensitivity-high-symbolic"
    else
        display_volume=0
        icon_name="microphone-sensitivity-muted-symbolic"
    fi
fi

# notification

icon_name="/usr/share/icons/gnome/scalable/status/${icon_name}.svg"
notify-send " " -i $icon_name -h int:value:$display_volume -h string:synchronous:volume
